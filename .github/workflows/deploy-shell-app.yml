name: Deploy Shell App
on:
  workflow_dispatch:
  workflow_call:
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Build Shell App
        run: |
          echo "🏗️ Building shell-app..."
          cd shell-app
          npm run build
        env:
          NODE_ENV: production
          VITE_SHELL_REMOTE_ENTRY: ${{ vars.VITE_SHELL_REMOTE_ENTRY || 'https://shell-app-seven.vercel.app/remoteEntry.js' }}
          VITE_DEMO_ONE_REMOTE_ENTRY: ${{ vars.VITE_DEMO_ONE_REMOTE_ENTRY || 'https://demo-app-one-two.vercel.app/remoteEntry.js' }}
          VITE_DEMO_TWO_REMOTE_ENTRY: ${{ vars.VITE_DEMO_TWO_REMOTE_ENTRY || 'https://demo-app-two-delta.vercel.app/remoteEntry.js' }}
          VITE_DEMO_THREE_REMOTE_ENTRY: ${{ vars.VITE_DEMO_THREE_REMOTE_ENTRY || 'https://demo-app-three-jet.vercel.app/remoteEntry.js' }}
          VITE_DEMO_COUNTER_REMOTE_ENTRY: ${{ vars.VITE_DEMO_COUNTER_REMOTE_ENTRY || 'https://demo-counter.vercel.app/remoteEntry.js' }}
      
      - name: Deploy Shell App
        run: |
          echo "🚀 Deploying shell-app..."
          cd shell-app
          DEPLOYMENT_URL=$(vercel --prod --yes --token=$VERCEL_TOKEN)
          echo "Deployment URL: $DEPLOYMENT_URL"
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_SHELL }}
      
      - name: Summary
        run: |
          echo "## ✅ Shell App Deployed" >> $GITHUB_STEP_SUMMARY
          echo "URL: $DEPLOYMENT_URL" >> $GITHUB_STEP_SUMMARY
